# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow

# TODO:
# * move this back to dev/tasks/r/github.linux.version.compatibility.yml when done
# * add back only on branches "*-github-*"
# * rstudio package manager packages?

on:
  push

jobs:
  write-files:
    name: "Write files"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      R_ORG: "rstudio"
      R_IMAGE: "r-base"
      R_TAG: "4.0-focal"
      ARROW_R_DEV: "FALSE"
    steps:
      - name: Checkout Arrow
        run: |
          # git clone --no-checkout {{ arrow.remote }} arrow
          git clone --no-checkout  https://github.com/jonkeane/arrow.git  arrow
          # git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
          git -C arrow fetch -t https://github.com/jonkeane/arrow.git ARROW-10623-attr-writing-test
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive
      - name: Free Up Disk Space
        shell: bash
        run: arrow/ci/scripts/util_cleanup.sh
      - name: Fetch Submodules and Tags
        shell: bash
        run: cd arrow && ci/scripts/util_checkout.sh
      - name: Docker Pull
        shell: bash
        run: cd arrow && docker-compose pull --ignore-pull-failures r
      - name: Docker Build
        shell: bash
        run: cd arrow && docker-compose build r
      - name: Docker Run
        shell: bash
        run: |
          cd arrow &&
          docker-compose run r /bin/bash -c "/arrow/ci/scripts/r_build_install.sh /arrow && cd r && R -f file-compatibility/write.R"
      - name: Upload the parquet artifacts
        uses: actions/upload-artifact@v2
        with:
          name: files
          path: arrow/r/file-compatibility/files

  read-files:
    name: "Read files with Arrow {matrix.old_arrow_version}"
    needs: [write-files]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        old_arrow_version:
          - "2.0.0"
          - "1.0.1"
    env:
      R_ORG: "rstudio"
      R_IMAGE: "r-base"
      R_TAG: "latest"
      ARROW_R_DEV: "FALSE"
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: files
          path: .
      - name:
        shell: bash
        run: ls -la .
