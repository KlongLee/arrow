# Generated by roxygen2: do not edit by hand

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Initial work for type metadata, with tests.
S3method("!=","arrow::Array")
S3method("!=","arrow::DataType")
S3method("!=","arrow::Field")
S3method("$","arrow-enum")
S3method("==","arrow::Array")
S3method("==","arrow::DataType")
S3method("==","arrow::Field")
S3method(length,"arrow::Array")
S3method(print,"arrow-enum")
<<<<<<< HEAD
=======
export(DateUnit)
export(Field_initialize)
export(MakeArray)
export(StatusCode)
export(TimeUnit)
export(Type)
export(array_data)
>>>>>>> Initial work for type metadata, with tests.
export(boolean)
export(date32)
export(date64)
export(decimal)
export(float16)
export(float32)
export(float64)
export(int16)
export(int32)
export(int64)
export(int8)
export(list_of)
export(null)
export(schema)
export(struct)
export(time32)
export(time64)
export(timestamp)
export(uint16)
export(uint32)
export(uint64)
export(uint8)
export(utf8)
<<<<<<< HEAD
=======
exportPattern("^.*$")
>>>>>>> Initial work for type metadata, with tests.
importFrom(R6,R6Class)
importFrom(Rcpp,sourceCpp)
importFrom(assertthat,assert_that)
importFrom(glue,glue)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map_chr)
importFrom(purrr,map_int)
importFrom(rlang,dots_n)
importFrom(rlang,quo_name)
importFrom(rlang,seq2)
importFrom(rlang,set_names)
<<<<<<< HEAD
=======
importFrom(Rcpp,sourceCpp)
>>>>>>> initial R :package: with travis setup and testthat suite, that links to arrow c++ library and calls arrow::int32()
=======
>>>>>>> Initial work for type metadata, with tests.
=======
importFrom(Rcpp,sourceCpp)
>>>>>>> initial R :package: with travis setup and testthat suite, that links to arrow c++ library and calls arrow::int32()
useDynLib(arrow, .registration = TRUE)
