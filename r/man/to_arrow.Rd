% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to-arrow.R
\name{to_arrow}
\alias{to_arrow}
\title{Send R data structures to Arrow}
\usage{
to_arrow(x, ...)
}
\arguments{
\item{x}{an R vector or \code{data.frame}}

\item{...}{additional arguments passed to some methods:
\itemize{
\item \code{table} logical: when providing a \code{data.frame} input, should it be made
into an Arrow Table or a struct-type Array? Default is \code{TRUE} unless you
specify a \code{type}.
\item \code{type} an explicit \link[=arrow__DataType]{type}, or NULL (the default) to
infer from \code{x}. Only valid when making an \code{Array}.
\item \code{schema} a schema. The default (\code{NULL}) infers the schema from the \code{x}.
Only valid when making a \code{Table} from a \code{data.frame}
}}
}
\value{
An \code{arrow::Table} if \code{x} is a \code{data.frame} unless otherwise directed,
or an \code{arrow::Array}.
}
\description{
Send R data structures to Arrow
}
\examples{
\donttest{
tbl <- data.frame(
  int = 1:10,
  dbl = as.numeric(1:10),
  lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),
  chr = letters[1:10],
  stringsAsFactors = FALSE
)
tab <- to_arrow(tbl)
tab$schema

a <- to_arrow(tbl$int)

# Making a struct column from a data.frame
df <- tibble::tibble(x = 1:10, y = 1:10)
a <- to_arrow(df, table = FALSE)
# Or specify a type
a <- to_arrow(df, type = struct(x = float64(), y = int16()))
}
}
