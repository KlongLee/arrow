% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filesystem.R
\docType{data}
\name{FileStats}
\alias{FileStats}
\alias{Selector}
\alias{FileSystem}
\alias{LocalFileSystem}
\alias{SubTreeFileSystem}
\title{FileSystem classes}
\description{
\code{FileSystem} is an abstract file system API,
\code{LocalFileSystem} is an implementation accessing files
on the local machine. \code{SubTreeFileSystem} is an implementation that delegates to another
implementation after prepending a fixed base path
}
\section{Factory}{


The \code{$create()} factory methods instantiate the \code{FileSystem} object and
take the following arguments, depending on the subclass:
\itemize{
\item no argument is needed for instantiating a \code{LocalFileSystem}
\item \code{base_path} and \code{base_fs} for instantiating a \code{SubTreeFileSystem}
}
}

\section{Methods}{

\itemize{
\item \code{$GetTargetStats(x)}: \code{x} may be a \link{Selector} or a character vector of paths. Returns a list of \link{FileStats}
\item \code{$CreateDir(path, recursive = TRUE)}: Create a directory and subdirectories.
\item \code{$DeleteDir(path)}: Delete a directory and its contents, recursively.
\item \code{$DeleteDirContents(path)}: Delete a directory's contents, recursively. Like \code{$DeleteDir()},
but doesn't delete the directory itself. Passing an empty path (\code{""}) will wipe the entire filesystem tree.
\item \code{$DeleteFile(path)} : Delete a file.
\item \code{$DeleteFiles(paths)} : Delete many files. The default implementation issues individual delete operations in sequence.
\item \code{$Move(src, dest)}: Move / rename a file or directory. If the destination exists:
if it is a non-empty directory, an error is returned
otherwise, if it has the same type as the source, it is replaced
otherwise, behavior is unspecified (implementation-dependent).
\item \code{$CopyFile(src, dest)}: Copy a file. If the destination exists and is a directory, an error is returned.
Otherwise, it is replaced.
\item \code{$OpenInputStream(path)}: Open an \link[=input stream]{InputStream} for sequential reading.
\item \code{$OpenInputFile(path)}: On an \link[=input file]{RandomAccessFile} for random access reading.
\item \code{$OpenOutputStream(path)}: Open an \link[=output stream]{OutputStream} for sequential writing.
\item \code{$OpenAppendStream(path)}: Open an \link[=output stream]{OutputStream} for appending.
}
}

\keyword{datasets}
