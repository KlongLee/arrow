% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-funcs-doc.R
\name{arrow-dplyr-functions}
\alias{arrow-dplyr-functions}
\title{Functions available in Arrow dplyr queries}
\description{
The \code{arrow} package contains mappings of 196 R functions to the corresponding
functions in the Arrow compute library. This allows you to write code inside
of \code{dplyr} methods that call R functions, including many in packages like
\code{stringr} and \code{lubridate}, and they will get translated to Arrow and run
on the Arrow query engine (Acero). This document lists all of the mapped
functions.
}
\details{
In the list below, any differences in behavior or support between Acero and
the R function are listed. If no notes follow the function name, then you
can assume that the function works in Acero just as it does in R.

Functions can be called either as \code{pkg::fun()} or just \code{fun()}, i.e. both
\code{str_sub()} and \code{stringr::str_sub()} work.

In addition to these functions, you can call any of Arrow's 243 compute
functions directly. Arrow has many functions that don't map to an existing R
function. In other cases where there is an R function mapping, you can still
call the Arrow function directly if you don't want the adaptations that the R
mapping has that make Acero behave like R. These functions are listed in the
\href{https://arrow.apache.org/docs/cpp/compute.html}{C++ documentation}, and
in the function registry in R, they are named with an \code{arrow_} prefix, such
as \code{arrow_ascii_is_decimal}.
\itemize{
\item \code{\link[=-]{-()}}
\item \code{\link[=!]{!()}}
\item \code{\link[=!=]{!=()}}
\item \code{\link[=*]{*()}}
\item \code{\link[=/]{/()}}
\item \code{\link[=&]{&()}}
\item \code{\link[=\%/\%]{\%/\%()}}
\item \code{\link[=\%\%]{\%\%()}}
\item \code{\link[=\%in\%]{\%in\%()}}
\item \code{\link[=^]{^()}}
\item \code{\link[=+]{+()}}
\item \code{\link[=<]{<()}}
\item \code{\link[=<=]{<=()}}
\item \code{\link[===]{==()}}
\item \code{\link[=>]{>()}}
\item \code{\link[=>=]{>=()}}
\item \code{\link[=|]{|()}}
\item \code{\link[=add_filename]{add_filename()}}
\item \code{\link[base:MathFun]{base::abs()}}
\item \code{\link[base:Trig]{base::acos()}}
\item \code{\link[base:all]{base::all()}}
\item \code{\link[base:any]{base::any()}}
\item \code{\link[base:character]{base::as.character()}}
\item \code{\link[base:as.Date]{base::as.Date()}}
\item \code{\link[base:difftime]{base::as.difftime()}}
\item \code{\link[base:double]{base::as.double()}}
\item \code{\link[base:factor]{base::as.factor()}}
\item \code{\link[base:integer]{base::as.integer()}}
\item \code{\link[base:logical]{base::as.logical()}}
\item \code{\link[base:numeric]{base::as.numeric()}}
\item \code{\link[base:Trig]{base::asin()}}
\item \code{\link[base:Round]{base::ceiling()}}
\item \code{\link[base:Trig]{base::cos()}}
\item \code{\link[base:data.frame]{base::data.frame()}}
\item \code{\link[base:difftime]{base::difftime()}}
\item \code{\link[base:startsWith]{base::endsWith()}}
\item \code{\link[base:Log]{base::exp()}}
\item \code{\link[base:Round]{base::floor()}}
\item \code{\link[base:format]{base::format()}}
\item \code{\link[base:grep]{base::grepl()}}
\item \code{\link[base:grep]{base::gsub()}}
\item \code{\link[base:ifelse]{base::ifelse()}}
\item \code{\link[base:character]{base::is.character()}}
\item \code{\link[base:double]{base::is.double()}}
\item \code{\link[base:factor]{base::is.factor()}}
\item \code{\link[base:is.finite]{base::is.finite()}}
\item \code{\link[base:is.finite]{base::is.infinite()}}
\item \code{\link[base:integer]{base::is.integer()}}
\item \code{\link[base:list]{base::is.list()}}
\item \code{\link[base:logical]{base::is.logical()}}
\item \code{\link[base:NA]{base::is.na()}}
\item \code{\link[base:is.finite]{base::is.nan()}}
\item \code{\link[base:numeric]{base::is.numeric()}}
\item \code{\link[base:ISOdatetime]{base::ISOdate()}}
\item \code{\link[base:ISOdatetime]{base::ISOdatetime()}}
\item \code{\link[base:Log]{base::log()}}
\item \code{\link[base:Log]{base::log10()}}
\item \code{\link[base:Log]{base::log1p()}}
\item \code{\link[base:Log]{base::log2()}}
\item \code{\link[base:Log]{base::logb()}}
\item \code{\link[base:Extremes]{base::max()}}
\item \code{\link[base:mean]{base::mean()}}
\item \code{\link[base:Extremes]{base::min()}}
\item \code{\link[base:nchar]{base::nchar()}}
\item \code{\link[base:paste]{base::paste()}}: the \code{collapse} argument is not yet supported
\item \code{\link[base:paste]{base::paste0()}}: the \code{collapse} argument is not yet supported
\item \code{\link[base:Extremes]{base::pmax()}}
\item \code{\link[base:Extremes]{base::pmin()}}
\item \code{\link[base:Round]{base::round()}}
\item \code{\link[base:sign]{base::sign()}}
\item \code{\link[base:Trig]{base::sin()}}
\item \code{\link[base:MathFun]{base::sqrt()}}
\item \code{\link[base:startsWith]{base::startsWith()}}
\item \code{\link[base:strptime]{base::strftime()}}
\item \code{\link[base:strptime]{base::strptime()}}
\item \code{\link[base:strrep]{base::strrep()}}
\item \code{\link[base:strsplit]{base::strsplit()}}
\item \code{\link[base:grep]{base::sub()}}
\item \code{\link[base:substr]{base::substr()}}
\item \code{\link[base:substr]{base::substring()}}
\item \code{\link[base:sum]{base::sum()}}
\item \code{\link[base:Trig]{base::tan()}}
\item \code{\link[base:chartr]{base::tolower()}}
\item \code{\link[base:chartr]{base::toupper()}}
\item \code{\link[base:Round]{base::trunc()}}
\item \code{\link[bit64:as.integer64.character]{bit64::as.integer64()}}
\item \code{\link[bit64:bit64-package]{bit64::is.integer64()}}
\item \code{\link[=cast]{cast()}}
\item \code{\link[=dictionary_encode]{dictionary_encode()}}
\item \code{\link[dplyr:between]{dplyr::between()}}
\item \code{\link[dplyr:case_when]{dplyr::case_when()}}
\item \code{\link[dplyr:coalesce]{dplyr::coalesce()}}
\item \code{\link[dplyr:if_else]{dplyr::if_else()}}
\item \code{\link[dplyr:context]{dplyr::n()}}
\item \code{\link[dplyr:n_distinct]{dplyr::n_distinct()}}
\item \code{\link[lubridate:am]{lubridate::am()}}
\item \code{\link[lubridate:as_date]{lubridate::as_date()}}
\item \code{\link[lubridate:as_date]{lubridate::as_datetime()}}
\item \code{\link[lubridate:round_date]{lubridate::ceiling_date()}}
\item \code{\link[lubridate:date]{lubridate::date()}}
\item \code{\link[lubridate:date_decimal]{lubridate::date_decimal()}}
\item \code{\link[lubridate:day]{lubridate::day()}}
\item \code{\link[lubridate:duration]{lubridate::ddays()}}
\item \code{\link[lubridate:decimal_date]{lubridate::decimal_date()}}
\item \code{\link[lubridate:duration]{lubridate::dhours()}}
\item \code{\link[lubridate:duration]{lubridate::dmicroseconds()}}
\item \code{\link[lubridate:duration]{lubridate::dmilliseconds()}}
\item \code{\link[lubridate:duration]{lubridate::dminutes()}}
\item \code{\link[lubridate:duration]{lubridate::dmonths()}}
\item \code{\link[lubridate:ymd]{lubridate::dmy()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::dmy_h()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::dmy_hm()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::dmy_hms()}}
\item \code{\link[lubridate:duration]{lubridate::dnanoseconds()}}
\item \code{\link[lubridate:duration]{lubridate::dpicoseconds()}}
\item \code{\link[lubridate:duration]{lubridate::dseconds()}}
\item \code{\link[lubridate:dst]{lubridate::dst()}}
\item \code{\link[lubridate:duration]{lubridate::dweeks()}}
\item \code{\link[lubridate:duration]{lubridate::dyears()}}
\item \code{\link[lubridate:ymd]{lubridate::dym()}}
\item \code{\link[lubridate:week]{lubridate::epiweek()}}
\item \code{\link[lubridate:year]{lubridate::epiyear()}}
\item \code{\link[lubridate:parse_date_time]{lubridate::fast_strptime()}}
\item \code{\link[lubridate:round_date]{lubridate::floor_date()}}
\item \code{\link[lubridate:format_ISO8601]{lubridate::format_ISO8601()}}
\item \code{\link[lubridate:hour]{lubridate::hour()}}
\item \code{\link[lubridate:date_utils]{lubridate::is.Date()}}
\item \code{\link[lubridate:is.instant]{lubridate::is.instant()}}
\item \code{\link[lubridate:posix_utils]{lubridate::is.POSIXct()}}
\item \code{\link[lubridate:is.instant]{lubridate::is.timepoint()}}
\item \code{\link[lubridate:week]{lubridate::isoweek()}}
\item \code{\link[lubridate:year]{lubridate::isoyear()}}
\item \code{\link[lubridate:leap_year]{lubridate::leap_year()}}
\item \code{\link[lubridate:make_datetime]{lubridate::make_date()}}
\item \code{\link[lubridate:make_datetime]{lubridate::make_datetime()}}
\item \code{\link[lubridate:make_difftime]{lubridate::make_difftime()}}
\item \code{\link[lubridate:day]{lubridate::mday()}}
\item \code{\link[lubridate:ymd]{lubridate::mdy()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::mdy_h()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::mdy_hm()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::mdy_hms()}}
\item \code{\link[lubridate:minute]{lubridate::minute()}}
\item \code{\link[lubridate:month]{lubridate::month()}}
\item \code{\link[lubridate:ymd]{lubridate::my()}}
\item \code{\link[lubridate:ymd]{lubridate::myd()}}
\item \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}}
\item \code{\link[lubridate:am]{lubridate::pm()}}
\item \code{\link[lubridate:day]{lubridate::qday()}}
\item \code{\link[lubridate:quarter]{lubridate::quarter()}}
\item \code{\link[lubridate:round_date]{lubridate::round_date()}}
\item \code{\link[lubridate:second]{lubridate::second()}}
\item \code{\link[lubridate:quarter]{lubridate::semester()}}
\item \code{\link[lubridate:tz]{lubridate::tz()}}
\item \code{\link[lubridate:day]{lubridate::wday()}}
\item \code{\link[lubridate:week]{lubridate::week()}}
\item \code{\link[lubridate:day]{lubridate::yday()}}
\item \code{\link[lubridate:ymd]{lubridate::ydm()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ydm_h()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ydm_hm()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ydm_hms()}}
\item \code{\link[lubridate:year]{lubridate::year()}}
\item \code{\link[lubridate:ymd]{lubridate::ym()}}
\item \code{\link[lubridate:ymd]{lubridate::ymd()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ymd_h()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ymd_hm()}}
\item \code{\link[lubridate:ymd_hms]{lubridate::ymd_hms()}}
\item \code{\link[lubridate:ymd]{lubridate::yq()}}
\item \code{\link[methods:is]{methods::is()}}
\item \code{\link[rlang:type-predicates]{rlang::is_character()}}
\item \code{\link[rlang:type-predicates]{rlang::is_double()}}
\item \code{\link[rlang:type-predicates]{rlang::is_integer()}}
\item \code{\link[rlang:type-predicates]{rlang::is_list()}}
\item \code{\link[rlang:type-predicates]{rlang::is_logical()}}
\item \code{\link[stats:median]{stats::median()}}
\item \code{\link[stats:quantile]{stats::quantile()}}
\item \code{\link[stats:sd]{stats::sd()}}
\item \code{\link[stats:cor]{stats::var()}}
\item \code{\link[stringi:stri_reverse]{stringi::stri_reverse()}}
\item \code{\link[stringr:str_c]{stringr::str_c()}}: the \code{collapse} argument is not yet supported
\item \code{\link[stringr:str_count]{stringr::str_count()}}
\item \code{\link[stringr:str_detect]{stringr::str_detect()}}
\item \code{\link[stringr:str_dup]{stringr::str_dup()}}
\item \code{\link[stringr:str_starts]{stringr::str_ends()}}
\item \code{\link[stringr:str_length]{stringr::str_length()}}
\item \code{\link[stringr:str_like]{stringr::str_like()}}
\item \code{\link[stringr:str_pad]{stringr::str_pad()}}
\item \code{\link[stringr:str_replace]{stringr::str_replace()}}
\item \code{\link[stringr:str_replace]{stringr::str_replace_all()}}
\item \code{\link[stringr:str_split]{stringr::str_split()}}
\item \code{\link[stringr:str_starts]{stringr::str_starts()}}
\item \code{\link[stringr:str_sub]{stringr::str_sub()}}
\item \code{\link[stringr:case]{stringr::str_to_lower()}}
\item \code{\link[stringr:case]{stringr::str_to_title()}}
\item \code{\link[stringr:case]{stringr::str_to_upper()}}
\item \code{\link[stringr:str_trim]{stringr::str_trim()}}
\item \code{\link[tibble:tibble]{tibble::tibble()}}
}
}
