% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install-arrow.R
\name{create_package_with_all_dependencies}
\alias{create_package_with_all_dependencies}
\title{Create an install package with all thirdparty dependencies}
\usage{
create_package_with_all_dependencies(
  outfile = NULL,
  package_source = NULL,
  quietly = TRUE
)
}
\arguments{
\item{outfile}{File path for the new tar.gz package. Defaults to
\code{arrow_V.V.V_with_deps.tar.gz} in the current directory (\code{V.V.V} is the version)}

\item{package_source}{File path for the input tar.gz package. Defaults to
downloading from CRAN.}
}
\value{
The full path to \code{outfile}, invisibly

This function is used for setting up an offline build. If it's possible to
download at build time, don't use this function. Instead, let \code{cmake}
download the required dependencies for you.
These downloaded dependencies are only used in the build if
\code{ARROW_DEPENDENCY_SOURCE} is unset, \code{BUNDLED}, or \code{AUTO}.
https://arrow.apache.org/docs/developers/cpp/building.html#offline-builds
\subsection{Steps for an offline install with optional dependencies:}{
\subsection{Using a computer with internet access, pre-download the dependencies:}{
\itemize{
\item Install the \code{arrow} package
\item Run \code{create_package_with_all_dependencies("my_arrow_pkg.tar.gz")}
\item Copy the newly created \code{my_arrow_pkg.tar.gz} to the computer without internet access
}
}

\subsection{On the computer without internet access, install the prepared package:}{
\itemize{
\item Install the \code{arrow} package from the copied file (\code{install.packages("my_arrow_pkg.tar.gz")})
\itemize{
\item This installation will build from source, so \code{cmake} must be available
}
\item Run \code{\link[=arrow_info]{arrow_info()}} to check installed capabilities
}
}

}
}
\description{
Create an install package with all thirdparty dependencies
}
\examples{
\dontrun{
new_pkg <- create_package_with_all_dependencies()
# Note: this works when run in the same R session, but it's meant to be
# copied to a different computer.
install.packages(new_pkg, dependencies = c("Depends", "Imports", "LinkingTo"))
}
}
