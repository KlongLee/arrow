% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipc.R
\name{write_arrow}
\alias{write_arrow}
\alias{write_stream}
\title{Write Arrow formatted data}
\usage{
write_arrow(x, sink, ...)

write_stream(x, sink, ...)
}
\arguments{
\item{x}{an Arrow \link{Table} or \link{RecordBatch}, or a \code{data.frame}}

\item{sink}{string file path, buffer, or Arrow C++ class to write to. If
\code{write_arrow()} receives a \code{RecordBatchStreamWriter} or an empty R \code{raw} vector,
it will dispatch to \code{write_stream()}; otherwise, it calls \code{write_feather()}
to write a file.}

\item{...}{extra parameters passed to \code{write_feather()}.}
}
\value{
\code{write_stream()} returns the stream: either the
\code{RecordBatchStreamWriter} passed to \code{sink}, connection still open, or if
\code{sink} is a \code{raw} vector, a new \code{raw} vector containing the bytes that were
written using a \code{RecordBatchStreamWriter}. \code{write_feather()} returns \code{x},
invisibly.
}
\description{
Apache Arrow defines two formats for \href{https://arrow.apache.org/docs/format/Columnar.html#serialization-and-interprocess-communication-ipc}{serializing data for interprocess communication (IPC)}:
a "stream" format and a "file" format, known as Feather. \code{write_arrow()}
is a convenience wrapper around \code{write_stream()} and \code{\link[=write_feather]{write_feather()}}, which
write those formats, respectively.
}
\seealso{
\link{RecordBatchWriter}
}
