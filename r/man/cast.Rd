% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-funcs-type.R
\name{cast}
\alias{cast}
\title{Change the type of an array or column}
\usage{
cast(x, target_type, safe = TRUE, ...)
}
\arguments{
\item{x}{an \code{Expression}}

\item{target_type}{\link{DataType} to cast to}

\item{safe}{logical: only allow the type conversion if no data is lost
(truncation, overflow, etc.). Default is \code{TRUE}}

\item{...}{specific \code{CastOptions} to set}
}
\value{
an \code{Expression}
}
\description{
The \code{cast()} function only exists inside of \code{arrow} \code{dplyr} queries. Use it
as a more convenient way of changing the type of a value or field inside of
a \code{mutate()} call. To cast an \code{Array} or \code{ChunkedArray} outside of a query,
call the \verb{$cast()} method on the object, which has the same semantics.
}
\examples{
\dontrun{
mtcars \%>\%
  arrow_table() \%>\%
  mutate(cyl = cast(cyl, string()))
}
}
\seealso{
https://arrow.apache.org/docs/cpp/api/compute.html for the list of
supported CastOptions.
}
\keyword{internal}
