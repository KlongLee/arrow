# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prerequisits on the host:
# - brew install bash bison coreutils ninja cmake
# - sudo arrow/ci/scripts/install_python.sh macos 3.9

{% import 'macros.jinja' as macros with context %}

{{ macros.github_header() }}

env:
  ARROW_S3: {{ arrow_s3 }}
  ARROW_FLIGHT: OFF
  ARROW_JEMALLOC: OFF
  ARROW_SIMD_LEVEL: NONE
  CC: "clang"
  CMAKE_CXX_COMPILER_LAUNCHER: "ccache"
  CXX: "clang++"
  MACOSX_DEPLOYMENT_TARGET: "{{ macos_deployment_target }}"
  PYARROW_BUILD_VERBOSE: 1
  PYARROW_VERSION: "{{ arrow.no_rc_version }}"
  PYTHON_VERSION: "{{ python_version }}"
  PYTHON: "/Library/Frameworks/Python.framework/Versions/{{ python_version }}/bin/python{{ python_version }}"
  VCPKG_DEFAULT_TRIPLET: arm64-osx-static-release
  VCPKG_FEATURE_FLAGS: "-manifests"
  VCPKG_OVERLAY_TRIPLETS: {{ "${{ github.workspace }}/arrow/ci/vcpkg" }}
  VCPKG_ROOT: {{ "${{ github.workspace }}/vcpkg" }}
  VCPKG_VERSION: "{{ vcpkg_version }}"
  CMAKE_BUILD_TYPE: release

jobs:
  build:
    name: Build wheel for OS X
    runs-on: self-hosted
    steps:
      - name: Cleanup
        shell: bash
        run: rm -rf arrow vcpkg build build-env test-env crossbow-env

      {{ macros.github_checkout_arrow()|indent }}

      - name: Add Brew's Bison to PATH
        shell: bash
        run: echo "/opt/homebrew/opt/bison/bin" >> $GITHUB_PATH

      - name: Install Vcpkg
        shell: bash
        run: arch -arm64 arrow/ci/scripts/install_vcpkg.sh $VCPKG_VERSION $VCPKG_ROOT

      - name: Install Packages
        run: |
          arch -arm64 $VCPKG_ROOT/vcpkg install \
            abseil \
            boost-filesystem \
            brotli \
            bzip2 \
            c-ares \
            curl \
            flatbuffers \
            gflags \
            glog \
            lz4 \
            openssl \
            orc \
            protobuf \
            rapidjson \
            re2 \
            snappy \
            thrift \
            utf8proc \
            zlib \
            zstd

      {% if arrow_s3 == "ON" %}
      - name: Install AWS SDK C++
        run: arch -arm64 $VCPKG_ROOT/vcpkg install aws-sdk-cpp[config,cognito-identity,core,identity-management,s3,sts,transfer]
      {% endif %}

      - name: Install Virtualenvs for Building and Testing
        shell: bash
        run: |
          for venv in build-env test-env crossbow-env; do
            arch -arm64 $PYTHON -m virtualenv ${venv}
            arch -arm64 ${venv}/bin/pip install --upgrade pip wheel
          done

      - name: Build Wheel
        shell: bash
        run: |
          source build-env/bin/activate
          arch -arm64 arrow/ci/scripts/python_wheel_macos_build.sh {{ arch }} $(pwd)/arrow $(pwd)/build

      - name: Test Wheel on ARM64
        shell: bash
        run: |
          source test-env/bin/activate
          arch -arm64 arrow/ci/scripts/python_wheel_macos_test.sh $(pwd)/arrow

      {% if arch == "universal2" %}
      - name: Test Wheel on AMD64
        shell: bash
        run: |
          source test-env/bin/activate
          arch -x86_64 arrow/ci/scripts/python_wheel_macos_test.sh $(pwd)/arrow
      {% endif %}

      - name: Upload artifacts
        shell: bash
        run: |
          source crossbow-env/bin/activate
          arch -arm64 pip install -e arrow/dev/archery[crossbow-upload]
          arch -arm64 archery crossbow \
          --queue-path $(pwd) \
          --queue-remote {{ queue_remote_url }} \
          upload-artifacts \
          --sha {{ task.branch }} \
          --tag {{ task.tag }} \
          "arrow/python/dist/*.whl"
        env:
          CROSSBOW_GITHUB_TOKEN: {{ "${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}" }}

      {{ macros.github_upload_gemfury("arrow/python/dist/*.whl")|indent }}
