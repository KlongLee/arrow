# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

groups:
  # these groups are just for convenience
  # makes it easier to submit related tasks
  docker:
    - docker-r
    - docker-rust
    - docker-cpp
    - docker-cpp-alpine
    - docker-cpp-cmake32
    - docker-c_glib
    - docker-go
    - docker-python-2.7
    - docker-python-3.6
    - docker-python-3.7
    - docker-python-2.7-alpine
    - docker-python-3.6-alpine
    - docker-java
    - docker-js
    - docker-docs
    - docker-lint
    - docker-iwyu
    - docker-clang-format
    - docker-pandas-master
    - docker-dask-integration
    - docker-hdfs-integration
    - docker-spark-integration

  integration:
    - docker-pandas-master
    - docker-dask-integration
    - docker-hdfs-integration
    - docker-spark-integration

  cpp-python:
    - docker-cpp
    - docker-cpp-alpine
    - docker-cpp-cmake32
    - docker-python-2.7
    - docker-python-2.7-alpine
    - docker-python-3.6
    - docker-python-3.6-alpine
    - docker-python-3.7

tasks:
  # arbitrary_task_name:
  #   platform: osx|linux|win
  #   template: path of jinja2 templated yml
  #   params: optional extra parameters
  #   artifacts: list of regex patterns, each needs to match a single github
  #              release asset, version variable is replaced in the pattern
  #              e.g.:
  #     - pyarrow-{version}-py36(h[a-z0-9]+)_0-linux-64.tar.bz2

  ############################## Language containers #########################

  docker-r:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build cpp
        - docker-compose build r
        - docker-compose run r

  docker-rust:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q rust
        - docker-compose run rust

  docker-cpp:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q cpp
        - docker-compose run cpp

  docker-cpp-alpine:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q cpp-alpine
        - docker-compose run cpp-alpine

  docker-cpp-cmake32:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q cpp-cmake32
        - docker-compose run cpp-cmake32

  docker-c_glib:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q c_glib
        - docker-compose run cpp

  docker-go:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q go
        - docker-compose run go

  docker-js:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q js
        - docker-compose run js

  docker-java:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      commands:
        - docker-compose build -q java
        - docker-compose run java

  docker-python-2.7:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 2.7
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose run python

  docker-python-3.6:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose run python

  docker-python-3.7:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.7
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose run python

  docker-python-2.7-alpine:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 2.7
      commands:
        - docker-compose build -q cpp-alpine
        - docker-compose build -q python-alpine
        - docker-compose run python-alpine

  docker-python-3.6-alpine:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp-alpine
        - docker-compose build -q python-alpine
        - docker-compose run python-alpine

  ###################### Documentation building tests #########################

  docker-docs:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q docs
        - docker-compose run docs

  ############################## Linter tests #################################

  docker-lint:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q lint
        - docker-compose run lint

  docker-iwyu:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q lint
        - docker-compose run iwyu

  docker-clang-format:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q lint
        - docker-compose run clang-format

  ############################## Integration tests ############################

  docker-dask-integration:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q dask-integration
        - docker-compose run dask-integration

  docker-hdfs-integration:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q hdfs-integration
        - docker-compose run hdfs-integration

  docker-spark-integration:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q spark-integration
        - docker-compose run spark-integration

  docker-pandas-master:
    platform: linux
    template: docker-tests/travis.linux.yml
    params:
      environment:
        PYTHON_VERSION: 3.6
      commands:
        - docker-compose build -q cpp
        - docker-compose build -q python
        - docker-compose build -q --no-cache pandas-master
        - docker-compose run pandas-master
