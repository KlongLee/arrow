# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{% import 'macros.jinja' as macros with context %}

{{ macros.github_header() }}

jobs:
  build-cpp-ubuntu:
    name: Build C++ Libs Ubuntu
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout {{ arrow.remote }} arrow
          git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
          if [ $CROSSBOW_USE_COMMIT_ID = true ]; then git -C arrow checkout {{ arrow.head }}; else git -C arrow checkout FETCH_HEAD; fi
          git -C arrow submodule update --init --recursive
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Setup Archery
        run: pip install -e arrow/dev/archery[docker]
      - name: Build C++ Libs
        run: |
          python3 -VV
          cd arrow
          mkdir -p dist
          export CC="gcc-4.9" CXX="g++-4.9"
          ulimit -c unlimited -S
          set -e
          archery docker build python-wheel-manylinux-2014-java
          archery docker run build python-wheel-manylinux-2014-java
          dev/tasks/jars/check-shared-dependencies.sh
        env:
          OS_NAME: "linux"
          CHECK_SHARED_DEPENDENCIES: true
      - name: Compress into single artifact
        run: tar -cvzf arrow-shared-libs-linux.tar.gz arrow/dist/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-shared-lib
          path: arrow-shared-libs-linux.tar.gz
  build-cpp-macos:
    name: Build C++ Libs MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout {{ arrow.remote }} arrow
          git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
          if [ $CROSSBOW_USE_COMMIT_ID = true ]; then git -C arrow checkout {{ arrow.head }}; else git -C arrow checkout FETCH_HEAD; fi
          git -C arrow submodule update --init --recursive
      - name: Build C++ Libs
        run: |
          cd arrow
          mkdir -p dist
          export ARROW_TEST_DATA=$PWD/testing/data
          set -e
          dev/tasks/jars/build-cpp-osx.sh
          dev/tasks/jars/check-shared-dependencies.sh
        env:
          OS_NAME: "osx"
          CHECK_SHARED_DEPENDENCIES: true
          MACOSX_DEPLOYMENT_TARGET: "10.11"
      - name: Compress into single artifact
        run: tar -cvzf arrow-shared-libs-macos.tar.gz arrow/dist/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-shared-lib
          path: arrow-shared-libs-macos.tar.gz
  package-jar:
    name: Build Jar Files
    runs-on: macos-latest
    needs: [build-cpp-macos, build-cpp-ubuntu]
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout {{ arrow.remote }} arrow
          git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
          if [ $CROSSBOW_USE_COMMIT_ID = true ]; then git -C arrow checkout {{ arrow.head }}; else git -C arrow checkout FETCH_HEAD; fi
          git -C arrow submodule update --init --recursive
          mkdir -p arrow/dist
      - name: Download Linux C++ Libraries
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-shared-lib
      - name: Download MacOS C++ Library
        uses: actions/download-artifact@v2
        with:
          name: macos-shared-lib
      - name: Descompress artifacts
        run: | 
          tar -xvzf arrow-shared-libs-macos.tar.gz
          tar -xvzf arrow-shared-libs-linux.tar.gz
      - name: Build Jar
        run: |
          cd arrow
          export ARROW_TEST_DATA=$PWD/testing/data
          set -e
          dev/tasks/jars/build-java.sh
        env:
          OS_NAME: "osx"
          COPY_JAR_TO_DISTRIBUTION_FOLDER: true
  
      {{ macros.github_upload_releases("arrow/dist/*.jar")|indent }}