# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

diff --git a/cpp/turbodbc_arrow/Test/tests/arrow_result_set_test.cpp b/cpp/turbodbc_arrow/Test/tests/arrow_result_set_test.cpp
index f80bdff..98c61bb 100644
--- a/cpp/turbodbc_arrow/Test/tests/arrow_result_set_test.cpp
+++ b/cpp/turbodbc_arrow/Test/tests/arrow_result_set_test.cpp
@@ -1,6 +1,7 @@
 #include <turbodbc_arrow/arrow_result_set.h>

 #include <list>
+#include <random>

 #undef BOOL
 #undef timezone
@@ -18,9 +19,6 @@
 #include <sql.h>

 using arrow::StringDictionaryBuilder;
-#ifdef ARROW_VERSION
-using arrow::random_bytes;
-#endif

 namespace {

@@ -49,13 +47,11 @@ namespace {
         ASSERT_OK(builder.Finish(out));
     }

-#ifndef ARROW_VERSION
     void random_bytes(int64_t n, uint32_t seed, uint8_t* out) {
         std::default_random_engine gen(seed);
         std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());
         std::generate(out, out + n, [&d, &gen] { return static_cast<uint8_t>(d(gen)); });
     }
-#endif

 }

