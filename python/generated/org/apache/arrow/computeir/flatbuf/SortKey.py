# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuf

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# An expression with an order
class SortKey(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSortKey(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SortKey()
        x.Init(buf, n + offset)
        return x

    # SortKey
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SortKey
    def Expression(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from org.apache.arrow.computeir.flatbuf.Expression import Expression
            obj = Expression()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # SortKey
    def Collation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def SortKeyStart(builder): builder.StartObject(2)
def SortKeyAddExpression(builder, expression): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(expression), 0)
def SortKeyAddCollation(builder, collation): builder.PrependUint8Slot(1, collation, 0)
def SortKeyEnd(builder): return builder.EndObject()
